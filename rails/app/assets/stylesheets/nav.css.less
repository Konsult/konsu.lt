@import "home.css.less";

@indicatorWidth: 80px;
@transitionDuration: 0.15s;

@indicatorColor: red;

.NavContainer {

  margin: 0 0 1em 0;
  text-align: center;

  box-sizing: border-box;

  #buttonContainer {
    position: relative;
    width: 100%;
  
    // Remove spaces added during Ember html generation
    font-size: 0;
    // For some reason mobile Safari wants to highlight this element.
    tap-highlight-color: transparent;

    box-sizing: border-box;
    @padding: 100% / @goldenRatio / 2;
    padding-bottom: 0 @padding;
  }
  #buttonContainer:after {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;

    content: "";

    background-image: linear-gradient(left, transparent 2%, black 20%, black 80%, transparent);    
    opacity: 0.1;
  }
  #buttonContainer:before {
    position: absolute;
    bottom: -1px;
    left: 0;
    right: 0;
    height: 1px;

    content: "";

    background-image: linear-gradient(left, fade(white, 10%), white 20%, white 80%, fade(white, 10%));    
  }
}

.NavButton {
  font-size: @primarySize * 1px;
  text-shadow: 0 1px 0 white;
  border-radius: 0;
  min-width: @indicatorWidth;

  // Prevent flashing at large widths
  transform: translateZ(0);
  
  transition: background-color transitionDuration ease-in-out;
  background-color: fade(white, 0);

  .ButtonHighlight {
      background-image: linear-gradient(bottom, white 2px, fade(white, 25%) 50%, fade(white, 0));
      background-image: linear-gradient(bottom, white 2px, fade(white, 0) 50%),
                        radial-gradient(left bottom, 25% 100%, fade(white, 50%), fade(white, 0)),
                        radial-gradient(right bottom, 25% 100%, fade(white, 50%), fade(white, 0));
      opacity: 0;
      border-radius: 0;
      transition-duration: @transitionDuration ease-in-out;
      transition-property: opacity, box-shadow;
  }

  .ButtonInterior {
    background-size: auto 1em;
    background-position: center;
    background-repeat: no-repeat;
  }
}

.NavButton.On {
  cursor: default;
}

.NavButton:not(.On).Hover {
  background-color: fade(white, 50%);

 .ButtonHighlight {
    opacity: 1;
      box-shadow: 0 0 3px fade(black, 10%);
  }
}
.NavButton:not(.On).Active {
  background-color: white;
}

.NavButton.On.Hover {
  .ButtonHighlight {
    opacity: 0;
  }
}

html:not(.cssgradients),
html:not(.opacity) {
  .NavButton {
    background-color: transparent;
  }
  .NavButton.Hover {
    background-color: white;
  }
  .NavButton.Active {
    background-color: @indicatorColor;
    color: white;
  }
}

#indicator {
  @height: 7px;
  @radius: @height;

  // This is set by NavContainer after initialization.
  opacity: 0;

  position: absolute;
  left: 50%;
  bottom: 0;

  width: @indicatorWidth - 2 * @radius;
  margin-left: -@indicatorWidth / 2 + @radius;
  border-radius: @radius @radius 0 0;

  height: @height;

  background-color: @indicatorColor;
  transition: @navTransitionDuration ease-out;
  transition-property: transform, opacity;

  box-sizing: border-box;
  border-top: 1px solid fade(orange, 100%);
  border-bottom: 1px solid fade(black, 10%);

  #point {
    @side: round(@height / 1.5);
    width: @side;
    height: @side;

    position: absolute;
    top: -@side;
    left: 50%;
    margin-left: -@side / 2;
    transform-origin: bottom left;
    transform: rotate(45deg);

    background-color: @indicatorColor;

    box-sizing: border-box;
    border-left: 1px solid fade(orange, 100%);
    border-top: 1px solid fade(orange, 100%);

  }
}

html:not(.csstransforms) {
  #indicator {
    display: none;
  }

  .NavButton.On {
    background-color: @indicatorColor;
    color: white;
  }
}